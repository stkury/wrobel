module "WRO";

metaclass Root
{
  New
  {
    return address( sess->id );
  };
}

non-transactional class Root extends Object
{
  address{ int sess_id; };

  txt userLogin { label = "Login"; };
  txt password;
  txt newPassword;
  txt newPasswordRepeat;

  noupdt ref user( User );

  Calculate
  {
    throw msg( SHOWTEXT, "Calculate called" );
  };

  method doLogin returns ref
  {
    int v_operId;
    roles rs := roles( 'LOGGEDIN', 'user-'+userLogin, txt(this.address.sess_id) );

    select max(id) into out:v_operId from users where username = in:userLogin and haslo = in:password;

    if( v_operId.isnull() )
      throw msg( ST, 'Niepoprawny login lub has³o' );

    parameters params;
    params.add( v_operId );
    params.add( userLogin );
    params.add( rs );
    sess->attachOuterUser( params );

    user := ref( 'User', address( v_operId ) );
    return user;
  };

  noupdt method dajId( bool check_user := true ) returns int
  {
    if( check_user )
    {
      int user_id := sess->user_id;
      if( user_id.isnull() ) throw msg( ST, 'User nie zalogowany' );
    }

    int vid;
    select objseq.nextval into out:vid from dual;

    return vid;
  };

  method createUser( txt name, txt pass ) returns User
  {
    int i := dajId( false );
    insert into users( id, username, haslo ) values ( in:i, in:name, in:pass );

    userLogin := name;
    password := pass;
    doLogin();

    return ref( 'User', address( i ) );
  };

  method sendMsg( int touser, txt mess ) returns ref
  {
    int i := dajId();
    insert into messages(id,userid,sender,state,msg) values( in:i, in:touser, OE.sess.userid, 'N', in:mess );

    return ref( "Message", address( i ) );
  };

  method utworzPunkt( txt nazwa := '' ) returns ref
  {
    int i := dajId();
    insert into punkty(id,userid,nazwa) values( in:i, OE.sess.userid, in:nazwa );

    return ref( "Punkt", address( i ) );
  };

  method utworzLokalizajce( txt nazwa := '' ) returns ref
  {
    int i := dajId();
    insert into lokalizacje(id,userid,nazwa) values( in:i, OE.sess.userid, in:nazwa );

    return ref( "Lokalizacja", address( i ) );
  };

  method utworzAtrakcje( txt nazwa := '' ) returns ref
  {
    int i := dajId();
    insert into atrakcje(id,userid,nazwa) values( in:i, OE.sess.userid, in:nazwa );

    recalculate( ref( 'AtrakcjeUsera', address( sess->user_id, '' ) ) );

    return ref( "Atrakcja", address( i ) );
  };
}
