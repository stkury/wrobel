module "WRO";


transactional class User extends TransObject
{
  address{ int id; };

  noupdt int id;
  noupdt txt username;

  noupdt ref messagesInN;
  noupdt ref messagesOut;

  noupdt ref punkty( PunktyUsera );
  noupdt ref lokalizacje( LokalizacjeUsera );
  noupdt ref atrakcje( AtrakcjeUsera );
  noupdt ref uczestnictwa( UczestnictwaUsera );

  Calculate
  {
    id := this.address.id;
    
    declare r users %rowtype;
    begin
      select * into r from users where id = in:id;
      out:username := r.username;
    end;

    messagesInN := ref( 'MessagesIn', address( id, 'N' ) );
    messagesOut := ref( 'MessagesOut', address( id ) );

    punkty      := ref( 'PunktyUsera', address( id, 'N' ) );
    lokalizacje := ref( 'LokalizacjeUsera', address( id, 'N' ) );
    atrakcje    := ref( 'AtrakcjeUsera', address( id, 'N' ) );
    uczestnictwa := ref( 'UczestnictwaUsera', address( id, 'N' ) );

    roles v_roles := roles( "Wro:user-"+username );
    for a in attrs( this )  a.wroles  := v_roles;

    messagesInN.rroles := v_roles;
    messagesOut.rroles := v_roles;

    recalculate(punkty);
  };

}


non-transactional indexable class ObiektyUsera extends IdxObject
{
  address{ int user_id; txt status; };

  noupdt int user_id;
  noupdt ref user;

  Calculate
  {
    user_id := this.address.user_id;

    user := ref( 'User', address( user_id ) );
  };
}
